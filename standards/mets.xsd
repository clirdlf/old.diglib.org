<?xml version="1.0" encoding="UTF-8"?>
<!-- METS: Metadata Encoding and Transmission Standard -->
<!-- Prepared for the Digital Library Federation by Jerome McDonough, New York University.-->
<!-- April 23, 2001 -->
<!-- Version 1.0 (alpha) -->
<!-- Change History -->
<!-- April 23, 2001: Alpha Draft completed -->
<xsd:schema targetNamespace="http://www.loc.gov/METS/" xmlns="http://www.loc.gov/METS/" xmlns:xsd="http://www.w3.org/2000/10/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xsd:element name="mets" type="metsType">
		<xsd:annotation>
			<xsd:documentation>METS: Metadata Encoding and Transmission Standard.
			METS is intended to provide a standardized XML format for transmission
			of complex digital library objects between systems.  As such, it can be seen
			as filling a role similar to that defined for the Submission Information Package
			(SIP) and Dissemination Information Package (DIP) in the Reference Model
			for an Open Archival Information System.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="dmdSec" type="mdSecType">
		<xsd:annotation>
			<xsd:documentation>dmdSec: Description Metadata Section.
			This section records all of the descriptive metadata for all subobjects in the METS object.
			Metadata can be either included in the METS hub document (mdWrap) or 
			referenced via an identifier/locator (mdRef), a la Warwick Framework.  Multiple
			mdRef and mdWrap elements are allowed so that descriptive metadata
			can be recorded for each separate subobject within the METS object.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="amdSec" type="amdSecType">
		<xsd:annotation>
			<xsd:documentation>amdSec: Administrative Metadata Section.
			This section records all of the administrative metadata for all subobjects in the METS object,
			and is divided into four subsections: techMD (technical metadata), rightsMD
			(intellectual property rights metadata), sourceMD (provenance metadata) and
			preservation (preservation metadata).  Each of these subsections follows the
			mdSecType model, so that they can either include metadata within the METS 
			hub document (mdWrap) or 	reference it via an identifier/locator (mdRef).  Multiple
			mdRef and mdWrap elements are allowed so that administrative metadata
			can be recorded for each separate subobject within the METS object.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="fileGrp" type="fileGrpType">
		<xsd:annotation>
			<xsd:documentation>fileGrp: File Group.
			File Groups record information regarding all of the data files comprising 
			the digital object, including both master files and derivatives.  File Groups 
			may both repeat and nest to provide an organizing framework for data files.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="structMap">
		<xsd:annotation>
			<xsd:documentation>structMap: Structural Map.
			The structural map is the heart of a METS document, defining the 
			hierarchical arrangement of a primary source document which has
			been digitized.  This hierarchy is encoded as a tree of 'div' elements.
			Any given 'div' can point to another METS document via the 'mptr'
			element, or to a single file, to a group of files, or to segments of individual 
			files or groups of files through the 'fptr' and subsidiary elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="structMapType"/>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="div" type="divType">
		<xsd:annotation>
			<xsd:documentation>div: Division of a structural map.  
				Nested div elements define the hierarchical structure of the digital library object.  
				Div elements are linked to the content corresponding to that div by subsidiary mptr and 
				fptr elements.  Div elements have the following attributes: 
				1. ID (an XML ID); 
				2. N: an integer representation of this div's order among its siblings (e.g., its page number); 
				3. NUMBER: a string representation of this div's order among its siblings (e.g., "Page xii"); 
				4. LABEL: a string to describe this div to an end user viewing the document, as per 
				a table of contents entry; and 
				5. DMD:  a set of IDREFs to descriptive metadata sections within this METS document
				applicable to this div.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="metsType">
		<xsd:annotation>
			<xsd:documentation>mets Complex Type.
			A METS document consists of four possible subsidiary sections:
			dmdSec (descriptive metadata section), amdSec (administrative
			metadata section), fileGrp (file inventory group), and structMap 
			(structural map).  It also has four possible attributes: ID (an XML
			ID), OBJID (a primary identifier assigned to the original source
			document), LABEL (a title/text string identifying the document for
			users), and TYPE (a type for the object, e.g., book, journal,
			stereograph, etc.).</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="dmdSec" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="amdSec" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="fileGrp" maxOccurs="unbounded"/>
			<xsd:element ref="structMap" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
		<xsd:attribute name="OBJID" type="xsd:string" use="optional"/>
		<xsd:attribute name="LABEL" type="xsd:string" use="optional"/>
		<xsd:attribute name="TYPE" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="amdSecType">
		<xsd:annotation>
			<xsd:documentation>amdSecType: Complex Type for Administrative Metadata.
			The administrative metadata section consists of four possible subsidiary
			sections: techMD (technical metadata for text/image/audio/video files), 
			rightsMD (intellectual property rights metadata), sourceMD (source 
			metadata i.e. provenance), and preservationMD (preservation metadata
			necessary to maintain the digital library object in the long term).  amdSecType
			has a single attribute, ID (XML ID).</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="techMD" type="mdSecType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>techMD: technical metadata.  
						The techMD element provides a wrapper around a generic metadata section, 
						which should contain technical metadata regarding a file or files.  It has a single 
						attribute, ID, which file/fileGrp elements can use to reference the technical 
						metadata that applies to them.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="rightsMD" type="mdSecType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>rightsMD: intellectual property rights metadata.  
						The rightsMD element provides a wrapper around a generic metadata section, 
						which should contain IP rights metadata.  It has a single attribute, ID, which 
						file/fileGrp/div elements can use to reference IP Rights metadata that applies to them.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="sourceMD" type="mdSecType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>sourceMD: source metadata.  
						The sourceMD element provides a wrapper around a  generic metadata section 
						which should contain source/provenance information.  It has a single attribute, 
						ID, which file/fileGrp elements can use to reference the source metadata which 
						applies to them.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="preservationMD" type="mdSecType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>preservationMD: preservation metadata.  
						The  preservationMD element provides a wrapper around a generic metadata 
						section which should contain preservation metadata.  It has a single attribute, 
						ID, which file/fileGrp elements can use to reference the preservation metadata 
						which applies to them.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="fileGrpType">
		<xsd:annotation>
			<xsd:documentation>fileGrpType: Complex Type for File Groups.
				The file group is used to cluster all of the digital files composing a digital
				library object in a hierarchical arrangement (fileGrp is recursively defined
				to enable the creation of the hierarchy).  Any file group may contain zero or
				more file elements.  File elements in turn can contain a FLocat element
				(a pointer to a file containing content for this object) and/or a FContent 
				element (the contents of the file Base64 encoded). 
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element ref="fileGrp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>file: File element.
						The file element provides access to content files for a METS document.
						It has the following attributes:
						1. ID: an XML ID for the element;
						2. MIMETYPE: the MIME type for the file;
						3. SEQ: an integer indicating the sequence of this file relative to the others in its file group;
						4. SIZE: the size of the file in bytes; 
						5. CREATED: the date of creation for the file; 
						6. OWNERID: a primary identifier assigned to the file by its owner; 
						7. ADMID: IDREFS to administrative metadata sections in the METS document 
						that correspond with this file; and 
						8. GROUPID: an identifier that establishes a correspondence between this file 
						and files in other file groups.  Typically, this will be used to associate a master 
						file in one file group with derivative files in other file groups.
						A file element may contain an FLocat element, which provides a pointer to
						a content file, and/or an FContent element, which wraps an encoded version
						of the file.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="FLocat" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>FLocat: File Location.  
									The FLocat element provides a pointer to the location of a content file.  
									It has two attributes: ID (an XML ID), and LOCTYPE (the type of locator 
									contained in the FLocat element).
								</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:simpleContent>
									<xsd:extension base="xsd:string">
										<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
										<xsd:attribute name="LOCTYPE" use="required">
											<xsd:simpleType>
												<xsd:restriction base="xsd:string">
													<xsd:enumeration value="URN"/>
													<xsd:enumeration value="URL"/>
													<xsd:enumeration value="PURL"/>
													<xsd:enumeration value="HANDLE"/>
													<xsd:enumeration value="DOI"/>
													<xsd:enumeration value="PDI"/>
												</xsd:restriction>
											</xsd:simpleType>
										</xsd:attribute>
									</xsd:extension>
								</xsd:simpleContent>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="FContent" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>FContent: file content.  
									The FContent element is used to deliver a content file for a METS 
									document within the METS file itself.  The content file must be Base 64 
									encoded, and contained within the FContent wrapper element.
								</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:simpleContent>
									<xsd:extension base="xsd:binary">
										<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
									</xsd:extension>
								</xsd:simpleContent>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="ID" type="xsd:ID" use="required"/>
					<xsd:attribute name="MIMETYPE" type="xsd:string" use="optional"/>
					<xsd:attribute name="SEQ" type="xsd:int" use="optional"/>
					<xsd:attribute name="SIZE" type="xsd:long" use="optional"/>
					<xsd:attribute name="CREATED" type="xsd:date" use="optional"/>
					<xsd:attribute name="OWNERID" type="xsd:string" use="optional"/>
					<xsd:attribute name="ADMID" type="xsd:IDREFS" use="optional"/>
					<xsd:attribute name="GROUPID" type="xsd:string" use="optional"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
		<xsd:attribute name="VERSDATE" type="xsd:date" use="optional"/>
		<xsd:attribute name="ADMIDS" type="xsd:IDREFS" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="structMapType">
		<xsd:annotation>
			<xsd:documentation>structMap Complex Type</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence maxOccurs="unbounded">
			<xsd:element name="div" type="divType">
				<xsd:annotation>
					<xsd:documentation>div: Division.  
						The METS standard represents a document structurally as a series of nested 
						div elements, that is, as a hierarchy (e.g., a book, which is composed of chapters, 
						which is composed of subchapters, which is composed of pages).  Every div node 
						in the structural map hierarchy may be connected (via subsidiary mptr or fptr 
						elements) to content files which represent that div's portion of the whole document.  
						The div element has the following attributes: 
						1. ID (an XML ID); 
						2. N: an integer representation of this div's order among its siblings 
						(e.g., its page number); 
						3. NUMBER: a string representation of this div's order among its siblings (e.g., "Page xii"); 
						4. LABEL: a string to describe this div to an end user viewing the document, as per 
						a table of contents entry; and 
						5. DMD:  a set of IDREFs to descriptive metadata sections within this METS document
						applicable to this div.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="divType">
		<xsd:annotation>
			<xsd:documentation>Div Complex Type</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="mptr" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>mptr: METS Pointer.  
						The mptr element allows a div to be associated with a separate METS document 
						containing the content corresponding with that div, rather than pointing to an 
						internal file or file group.  A typical instance of this would be the case of a METS 
						document for a journal run, with a div elements for each individual journal issue.  
						The div elements for the issues might point to separate METS documents for each 
						issue, rather than having files and file groups for every issue encoded in one 
						document.  The mptr is derived from the XLink recommendation of the W3C, 
						and should be used according to W3C guidelines.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
					<xsd:attribute name="type" type="xsd:string" use="fixed" value="simple"/>
					<xsd:attribute name="href" type="xsd:uriReference" use="required"/>
					<xsd:attribute name="role" type="xsd:string"/>
					<xsd:attribute name="arcrole" type="xsd:string"/>
					<xsd:attribute name="title" type="xsd:string"/>
					<xsd:attribute name="show">
						<xsd:simpleType>
							<xsd:restriction base="xsd:NMTOKEN">
								<xsd:enumeration value="new"/>
								<xsd:enumeration value="replace"/>
								<xsd:enumeration value="embed"/>
								<xsd:enumeration value="other"/>
								<xsd:enumeration value="none"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="actuate">
						<xsd:simpleType>
							<xsd:restriction base="xsd:NMTOKEN">
								<xsd:enumeration value="onLoad"/>
								<xsd:enumeration value="onRequest"/>
								<xsd:enumeration value="other"/>
								<xsd:enumeration value="none"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="fptr" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>fptr: File Pointer.  
						The fptr element associates a div element with content files that represent that div.  
						It can either point to a file directly itself, via the FILEID attribute, or it can do more 
						complex links to content via the subsidiary par and seq elements.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="par" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>par: Parallel  files.  
									The par element should used to link a div to a set of content files when 
									those files should be played back in unison to display the content to the 
									user.  Individual area subelements within the par element provide the links 
									to the files or portions thereof.
								</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="area" type="areaType" maxOccurs="unbounded"/>
								</xsd:sequence>
								<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="seq" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>seq: Sequence of files.  
									The seq element should be used to link a div to one or more content files 
									when those files should be played sequentially to display content to a user, 
									or where there is only one file to link, but the link from div to file requires 
									identifying a subcomponent of a file.
								</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="area" type="areaType" maxOccurs="unbounded"/>
								</xsd:sequence>
								<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
					<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
					<xsd:attribute name="FILEID" type="xsd:IDREF" use="optional"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element ref="div" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
		<xsd:attribute name="N" type="xsd:integer" use="optional"/>
		<xsd:attribute name="NUMBER" type="xsd:string" use="optional"/>
		<xsd:attribute name="LABEL" type="xsd:string" use="optional"/>
		<xsd:attribute name="DMD" type="xsd:IDREFS" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="areaType">
		<xsd:annotation>
			<xsd:documentation>areaType: Complex Type for Area linking.
				The area element provides for more sophisticated linking between a div 
				element and content files representing that div, be they text, image, 
				audio, or video files.  An area element can link a div to a point 
				within a file, to a one-dimension segment of a file (e.g., text screen, 
				image line, audio/video clip), or a two-dimensional section of a file 
				(e.g, subsection of an image, or a subsection of the  video display 
				of a video file.  The area element has no content, and the following 
				attributes: 
				1. ID: an XML ID; 
				2. FILE: an IDREF to the file element being pointed to by the div; 
				3. SHAPE: a text string defining the shape of a two-dimensional 
				area being referenced in a link file; 
				4. COORDS: a text string representing a set of visual coordinates 
				within an image (still image or video frame).  The COORDS and 
				SHAPE attributes should be used as in HTML 4; 
				5. BEGIN: a beginning location in a referenced file; 
				6. END: an ending location in a referenced file; 
				7. BETYPE: the syntax used in specifying the BEGIN and END 
				attributes (byte offset, IDREF value, or SMPTE time code); 
				8. EXTENT: the duraction of the segment; and 
				9. EXTTYPE: the syntax used in specifying the extent (byte length 
				or SMPTE time value).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
		<xsd:attribute name="FILE" type="xsd:IDREF" use="required"/>
		<xsd:attribute name="SHAPE" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="rect"/>
					<xsd:enumeration value="circle"/>
					<xsd:enumeration value="poly"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="COORDS" type="xsd:string" use="optional"/>
		<xsd:attribute name="BEGIN" type="xsd:string" use="optional"/>
		<xsd:attribute name="END" type="xsd:string" use="optional"/>
		<xsd:attribute name="BETYPE" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="BYTE"/>
					<xsd:enumeration value="IDREF"/>
					<xsd:enumeration value="SMPTE"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="EXTENT" type="xsd:string" use="optional"/>
		<xsd:attribute name="EXTTYPE" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="BYTE"/>
					<xsd:enumeration value="SMPTE"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="mdSecType">
		<xsd:annotation>
			<xsd:documentation>mdSec (metadata section) Complex Type</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="mdRef" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>mdRef: metadata reference.  
						The mdRef element is a generic element used throughout the METS schema 
						to provide a pointer to metadata which resides outside the METS document.  
						It has the following attributes: 
						1. ID: an XML ID; 
						2. LOCTYPE: the type of locator contained in the body of the element; 
						3. MIMETYPE: the MIME type for the metadata being pointed at; 
						4. MDType: the type of metadata being pointed at (e.g., MARC, EAD, etc.); 
						5. LABEL: a label to display to the viewer of the METS document identifying the metadata; and 
						6. XPTR: an xptr to a location within the file pointed to by the mdRef element, if applicable.						</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:string">
							<xsd:attribute name="ID" type="xsd:ID" use="required"/>
							<xsd:attribute name="LOCTYPE" use="required">
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:enumeration value="URN"/>
										<xsd:enumeration value="URL"/>
										<xsd:enumeration value="PURL"/>
										<xsd:enumeration value="HANDLE"/>
										<xsd:enumeration value="DOI"/>
										<xsd:enumeration value="PDI"/>
										<xsd:enumeration value="OTHER"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:attribute>
							<xsd:attribute name="MIMETYPE" type="xsd:string" use="optional"/>
							<xsd:attribute name="MDTYPE" use="required">
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:enumeration value="MARC"/>
										<xsd:enumeration value="EAD"/>
										<xsd:enumeration value="VRA"/>
										<xsd:enumeration value="DC"/>
										<xsd:enumeration value="NISOIMG"/>
										<xsd:enumeration value="LC-AV"/>
										<xsd:enumeration value="VRA"/>
										<xsd:enumeration value="TEIHDR"/>
										<xsd:enumeration value="OTHER"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:attribute>
							<xsd:attribute name="LABEL" type="xsd:string" use="optional"/>
							<xsd:attribute name="XPTR" type="xsd:string" use="optional"/>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="mdWrap" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>mdWrap: metadata wrapper.  
						The mdWrap element is a generic element used throughout the METS schema  to allow 
						the encoder to place arbitrary metadata conforming to other standards/schema within a 
						METS document.  The included metadata can either be encoded in XML, in which case 
						it may be placed directly within the mdWrap element, or it can be Base64 encoded, and 
						placed within a subsidiary binData element.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="binData" type="xsd:binary" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>A wrapper to contain Base64 encoded metadata.											</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:any namespace="##any"/>
					</xsd:choice>
					<xsd:attribute name="ID" type="xsd:ID" use="required"/>
					<xsd:attribute name="MIMETYPE" type="xsd:string" use="optional"/>
					<xsd:attribute name="MDTYPE" use="optional">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="MARC"/>
								<xsd:enumeration value="EAD"/>
								<xsd:enumeration value="VRA"/>
								<xsd:enumeration value="DC"/>
								<xsd:enumeration value="NISOIMG"/>
								<xsd:enumeration value="LC-AV"/>
								<xsd:enumeration value="VRA"/>
								<xsd:enumeration value="TEIHDR"/>
								<xsd:enumeration value="OTHER"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="LABEL" type="xsd:string" use="optional"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
	</xsd:complexType>
</xsd:schema>
